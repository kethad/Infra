- hosts: all
  become: yes
  become_method: sudo
  tasks:
    - name: Unregistering from Foreman
      shell: subscription-manager unregister
      ignore_errors: true

    - name: Remove existing certificate - RH7
      yum:
        name: katello-ca-consumer-foreman.infra.spindices.com
        state: absent
      when:
        - ansible_distribution_major_version == "7"

    - name: Remove existing certificate - RH8
      dnf:
        name: katello-ca-consumer-foreman.infra.spindices.com
        state: absent
      when:
        - ansible_distribution_major_version == "8"
      ignore_errors: true

    - name: Clean existing certificate
      shell: subscription-manager clean
      ignore_errors: true

    - name: Download and install a copy of the CA Certificate for the foreman server
      shell: rpm -ivh http://foreman.infra.spdji.spgi/pub/katello-ca-consumer-latest.noarch.rpm --force
      ignore_errors: true

    - name: Download and install foreman client - RH7
      yum:
        disable_gpg_check: yes
        name: https://yum.theforeman.org/client/latest/el7/x86_64/foreman-client-release.rpm
        state: present
      when:
        - ansible_distribution_major_version == "7"

    - name: Download and install foreman client - RH8
      dnf:
        disable_gpg_check: yes
        name: https://yum.theforeman.org/client/latest/el8/x86_64/foreman-client-release.rpm
        state: present
      when:
        - ansible_distribution_major_version == "8"

    - name: Download and install epel-release - RH7
      yum:
        disable_gpg_check: yes
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
      when:
        - ansible_distribution_major_version == "7"

    - name: Download and install epel-release - RH8
      dnf:
        disable_gpg_check: yes
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
        state: present
      when:
        - ansible_distribution_major_version == "8"


    - name: Installing katello packages - RH7
      yum:
        name: ['katello-host-tools', 'katello-agent', 'katello-host-tools-tracer']
        state: present
      when:
        - ansible_distribution_major_version == "7"
      ignore_errors: true

    - name: Installing katello packages - RH8
      dnf:
        name: ['katello-host-tools', 'katello-agent', 'katello-host-tools-tracer']
        state: present
      when:
        - ansible_distribution_major_version == "8"
      ignore_errors: true

    - name: Enable Subscribed repostories
      command: subscription-manager config --rhsm.manage_repos=1

    - name: Get Environment Details of each server
      # shell: "/usr/local/bin/aws ec2 describe-instances --no-verify-ssl --region us-west-2 --filters Name=private-ip-address,Values={{ inventory_hostname }} --query 'Reservations[].Instances[].[Tags[?Key==`Environment`].Value]' --output text"
      shell: "/usr/local/bin/aws ec2 describe-instances --no-verify-ssl --region {{ REGION }} --filters Name=private-ip-address,Values={{ inventory_hostname }} --query 'Reservations[].Instances[].[Tags[?Key==`Environment`].Value]' --output text"
      register: env
      delegate_to: localhost
      remote_user: jenkins
      ignore_errors: true

    - debug: msg="{{env.stdout}}"

      #    - set_fact:
      #  environment = "{{ env.stdout | replace('\"','') }}"

      #- debug: msg= "{{ environment }}"

      #    - name: UnRegistering client from old Foreman
      #      shell: subscription-manager unregister

    - name: Registering DEV client into Forman -RH7
      redhat_subscription:
        state: present
        activationkey: RH7-DEV-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "7"
        - env.stdout == "DEV"
      ignore_errors: true

    - name: Registering QA & UAT client into Forman -RH7
      redhat_subscription:
        state: present
        activationkey: RH7-QA-UAT-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "7"
        - env.stdout == "UAT" or env.stdout == "QA"
      ignore_errors: true

    - name: Registering PROD client into Forman -RH7
      redhat_subscription:
        state: present
        activationkey: RH7-PROD-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "7"
        - env.stdout == "PROD" or env.stdout == "PREPROD"
      ignore_errors: true

    - name: Registering DR client into Forman -RH7
      redhat_subscription:
        state: present
        activationkey: RH7-DR-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "7"
        - env.stdout == "DR"
      ignore_errors: true

    - name: Registering DEV client into Forman -RH8
      redhat_subscription:
        state: present
        activationkey: RH8-DEV-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "8"
        - env.stdout == "DEV"
      ignore_errors: true

    - name: Registering QA & UAT client into Forman -RH8
      redhat_subscription:
        state: present
        activationkey: RH8-QA-UAT-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "8"
        - env.stdout == "QA" or env.stdout == "UAT"
      ignore_errors: true

    - name: Registering PROD client into Forman -RH8
      redhat_subscription:
        state: present
        activationkey: RH8-PROD-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "8"
        - env.stdout == "PROD" or env.stdout == "PREPROD"
      ignore_errors: true

    - name: Registering DR client into Forman -RH8
      redhat_subscription:
        state: present
        activationkey: RH8-DR-KEY
        org_id: SPDJI
      when:
        - ansible_distribution_major_version == "8"
        - env.stdout == "DR"
      ignore_errors: true



    - name: yum-clean-metadata
      command: yum clean metadata
      args:
        warn: no




    - name: Locate all existing repos
      find:
        paths: /etc/yum.repos.d
        patterns: "*.repo"
      register: files_to_delete

    - name: Remove all local repo
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ files_to_delete.files }}"
